// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: message.proto

#include "message.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

class MessageProtoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MessageProto>
      _instance;
} _MessageProto_default_instance_;
namespace protobuf_message_2eproto {
static void InitDefaultsMessageProto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_MessageProto_default_instance_;
    new (ptr) ::MessageProto();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::MessageProto::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MessageProto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMessageProto}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_MessageProto.base);
}

::google::protobuf::Metadata file_level_metadata[1];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MessageProto, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MessageProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MessageProto, destination_node_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MessageProto, destination_channel_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MessageProto, source_node_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MessageProto, source_channel_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MessageProto, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MessageProto, data_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MessageProto, data_ptr_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MessageProto, batch_number_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MessageProto, keys_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MessageProto, values_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MessageProto, main_channel_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MessageProto, channel_request_),
  3,
  0,
  4,
  5,
  6,
  ~0u,
  ~0u,
  7,
  ~0u,
  ~0u,
  1,
  2,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 17, sizeof(::MessageProto)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::_MessageProto_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "message.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 1);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\rmessage.proto\"\256\003\n\014MessageProto\022\030\n\020dest"
      "ination_node\030\001 \002(\005\022\033\n\023destination_channe"
      "l\030\002 \002(\t\022\023\n\013source_node\030\003 \001(\005\022\026\n\016source_c"
      "hannel\030\004 \001(\005\022\'\n\004type\030\t \002(\0162\031.MessageProt"
      "o.MessageType\022\014\n\004data\030\013 \003(\014\022\020\n\010data_ptr\030"
      "\014 \003(\003\022\024\n\014batch_number\030\025 \001(\003\022\014\n\004keys\030\037 \003("
      "\014\022\016\n\006values\030  \003(\014\022\025\n\014main_channel\030\351\007 \001(\t"
      "\022\030\n\017channel_request\030\352\007 \001(\t\"\213\001\n\013MessageTy"
      "pe\022\t\n\005EMPTY\020\000\022\r\n\tTXN_PROTO\020\001\022\r\n\tTXN_BATC"
      "H\020\002\022\017\n\013READ_RESULT\020\003\022\020\n\014LINK_CHANNEL\020\004\022\022"
      "\n\016UNLINK_CHANNEL\020\005\022\013\n\007TXN_PTR\020\006\022\017\n\013MESSA"
      "GE_PTR\020\007"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 448);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "message.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_message_2eproto
const ::google::protobuf::EnumDescriptor* MessageProto_MessageType_descriptor() {
  protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_message_2eproto::file_level_enum_descriptors[0];
}
bool MessageProto_MessageType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const MessageProto_MessageType MessageProto::EMPTY;
const MessageProto_MessageType MessageProto::TXN_PROTO;
const MessageProto_MessageType MessageProto::TXN_BATCH;
const MessageProto_MessageType MessageProto::READ_RESULT;
const MessageProto_MessageType MessageProto::LINK_CHANNEL;
const MessageProto_MessageType MessageProto::UNLINK_CHANNEL;
const MessageProto_MessageType MessageProto::TXN_PTR;
const MessageProto_MessageType MessageProto::MESSAGE_PTR;
const MessageProto_MessageType MessageProto::MessageType_MIN;
const MessageProto_MessageType MessageProto::MessageType_MAX;
const int MessageProto::MessageType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void MessageProto::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MessageProto::kDestinationNodeFieldNumber;
const int MessageProto::kDestinationChannelFieldNumber;
const int MessageProto::kSourceNodeFieldNumber;
const int MessageProto::kSourceChannelFieldNumber;
const int MessageProto::kTypeFieldNumber;
const int MessageProto::kDataFieldNumber;
const int MessageProto::kDataPtrFieldNumber;
const int MessageProto::kBatchNumberFieldNumber;
const int MessageProto::kKeysFieldNumber;
const int MessageProto::kValuesFieldNumber;
const int MessageProto::kMainChannelFieldNumber;
const int MessageProto::kChannelRequestFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MessageProto::MessageProto()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_message_2eproto::scc_info_MessageProto.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:MessageProto)
}
MessageProto::MessageProto(const MessageProto& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      data_(from.data_),
      data_ptr_(from.data_ptr_),
      keys_(from.keys_),
      values_(from.values_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  destination_channel_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_destination_channel()) {
    destination_channel_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.destination_channel_);
  }
  main_channel_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_main_channel()) {
    main_channel_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.main_channel_);
  }
  channel_request_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_channel_request()) {
    channel_request_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.channel_request_);
  }
  ::memcpy(&destination_node_, &from.destination_node_,
    static_cast<size_t>(reinterpret_cast<char*>(&batch_number_) -
    reinterpret_cast<char*>(&destination_node_)) + sizeof(batch_number_));
  // @@protoc_insertion_point(copy_constructor:MessageProto)
}

void MessageProto::SharedCtor() {
  destination_channel_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  main_channel_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  channel_request_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&destination_node_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&batch_number_) -
      reinterpret_cast<char*>(&destination_node_)) + sizeof(batch_number_));
}

MessageProto::~MessageProto() {
  // @@protoc_insertion_point(destructor:MessageProto)
  SharedDtor();
}

void MessageProto::SharedDtor() {
  destination_channel_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  main_channel_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  channel_request_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MessageProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* MessageProto::descriptor() {
  ::protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MessageProto& MessageProto::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_message_2eproto::scc_info_MessageProto.base);
  return *internal_default_instance();
}


void MessageProto::Clear() {
// @@protoc_insertion_point(message_clear_start:MessageProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  data_.Clear();
  data_ptr_.Clear();
  keys_.Clear();
  values_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      destination_channel_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      main_channel_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      channel_request_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 248u) {
    ::memset(&destination_node_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&batch_number_) -
        reinterpret_cast<char*>(&destination_node_)) + sizeof(batch_number_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool MessageProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MessageProto)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 destination_node = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_destination_node();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &destination_node_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string destination_channel = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_destination_channel()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->destination_channel().data(), static_cast<int>(this->destination_channel().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MessageProto.destination_channel");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 source_node = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_source_node();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &source_node_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 source_channel = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_source_channel();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &source_channel_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .MessageProto.MessageType type = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MessageProto_MessageType_IsValid(value)) {
            set_type(static_cast< ::MessageProto_MessageType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                9, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated bytes data = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int64 data_ptr = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 96u, input, this->mutable_data_ptr())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_data_ptr())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 batch_number = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(168u /* 168 & 0xFF */)) {
          set_has_batch_number();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &batch_number_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated bytes keys = 31;
      case 31: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(250u /* 250 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_keys()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated bytes values = 32;
      case 32: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(2u /* 258 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_values()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string main_channel = 1001;
      case 1001: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 8010 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_main_channel()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->main_channel().data(), static_cast<int>(this->main_channel().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MessageProto.main_channel");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string channel_request = 1002;
      case 1002: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 8018 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_channel_request()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->channel_request().data(), static_cast<int>(this->channel_request().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MessageProto.channel_request");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MessageProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MessageProto)
  return false;
#undef DO_
}

void MessageProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MessageProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 destination_node = 1;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->destination_node(), output);
  }

  // required string destination_channel = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->destination_channel().data(), static_cast<int>(this->destination_channel().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MessageProto.destination_channel");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->destination_channel(), output);
  }

  // optional int32 source_node = 3;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->source_node(), output);
  }

  // optional int32 source_channel = 4;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->source_channel(), output);
  }

  // required .MessageProto.MessageType type = 9;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      9, this->type(), output);
  }

  // repeated bytes data = 11;
  for (int i = 0, n = this->data_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      11, this->data(i), output);
  }

  // repeated int64 data_ptr = 12;
  for (int i = 0, n = this->data_ptr_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(
      12, this->data_ptr(i), output);
  }

  // optional int64 batch_number = 21;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(21, this->batch_number(), output);
  }

  // repeated bytes keys = 31;
  for (int i = 0, n = this->keys_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      31, this->keys(i), output);
  }

  // repeated bytes values = 32;
  for (int i = 0, n = this->values_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      32, this->values(i), output);
  }

  // optional string main_channel = 1001;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->main_channel().data(), static_cast<int>(this->main_channel().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MessageProto.main_channel");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1001, this->main_channel(), output);
  }

  // optional string channel_request = 1002;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->channel_request().data(), static_cast<int>(this->channel_request().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MessageProto.channel_request");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1002, this->channel_request(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MessageProto)
}

::google::protobuf::uint8* MessageProto::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:MessageProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 destination_node = 1;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->destination_node(), target);
  }

  // required string destination_channel = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->destination_channel().data(), static_cast<int>(this->destination_channel().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MessageProto.destination_channel");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->destination_channel(), target);
  }

  // optional int32 source_node = 3;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->source_node(), target);
  }

  // optional int32 source_channel = 4;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->source_channel(), target);
  }

  // required .MessageProto.MessageType type = 9;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      9, this->type(), target);
  }

  // repeated bytes data = 11;
  for (int i = 0, n = this->data_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(11, this->data(i), target);
  }

  // repeated int64 data_ptr = 12;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt64ToArray(12, this->data_ptr_, target);

  // optional int64 batch_number = 21;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(21, this->batch_number(), target);
  }

  // repeated bytes keys = 31;
  for (int i = 0, n = this->keys_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(31, this->keys(i), target);
  }

  // repeated bytes values = 32;
  for (int i = 0, n = this->values_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(32, this->values(i), target);
  }

  // optional string main_channel = 1001;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->main_channel().data(), static_cast<int>(this->main_channel().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MessageProto.main_channel");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1001, this->main_channel(), target);
  }

  // optional string channel_request = 1002;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->channel_request().data(), static_cast<int>(this->channel_request().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MessageProto.channel_request");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1002, this->channel_request(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MessageProto)
  return target;
}

size_t MessageProto::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:MessageProto)
  size_t total_size = 0;

  if (has_destination_channel()) {
    // required string destination_channel = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->destination_channel());
  }

  if (has_destination_node()) {
    // required int32 destination_node = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->destination_node());
  }

  if (has_type()) {
    // required .MessageProto.MessageType type = 9;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  return total_size;
}
size_t MessageProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MessageProto)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000049) ^ 0x00000049) == 0) {  // All required fields are present.
    // required string destination_channel = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->destination_channel());

    // required int32 destination_node = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->destination_node());

    // required .MessageProto.MessageType type = 9;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated bytes data = 11;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->data_size());
  for (int i = 0, n = this->data_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->data(i));
  }

  // repeated int64 data_ptr = 12;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int64Size(this->data_ptr_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->data_ptr_size());
    total_size += data_size;
  }

  // repeated bytes keys = 31;
  total_size += 2 *
      ::google::protobuf::internal::FromIntSize(this->keys_size());
  for (int i = 0, n = this->keys_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->keys(i));
  }

  // repeated bytes values = 32;
  total_size += 2 *
      ::google::protobuf::internal::FromIntSize(this->values_size());
  for (int i = 0, n = this->values_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->values(i));
  }

  if (_has_bits_[0 / 32] & 6u) {
    // optional string main_channel = 1001;
    if (has_main_channel()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->main_channel());
    }

    // optional string channel_request = 1002;
    if (has_channel_request()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->channel_request());
    }

  }
  if (_has_bits_[0 / 32] & 48u) {
    // optional int32 source_node = 3;
    if (has_source_node()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->source_node());
    }

    // optional int32 source_channel = 4;
    if (has_source_channel()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->source_channel());
    }

  }
  // optional int64 batch_number = 21;
  if (has_batch_number()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->batch_number());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MessageProto::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MessageProto)
  GOOGLE_DCHECK_NE(&from, this);
  const MessageProto* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MessageProto>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MessageProto)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MessageProto)
    MergeFrom(*source);
  }
}

void MessageProto::MergeFrom(const MessageProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MessageProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  data_.MergeFrom(from.data_);
  data_ptr_.MergeFrom(from.data_ptr_);
  keys_.MergeFrom(from.keys_);
  values_.MergeFrom(from.values_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_destination_channel();
      destination_channel_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.destination_channel_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_main_channel();
      main_channel_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.main_channel_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_channel_request();
      channel_request_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.channel_request_);
    }
    if (cached_has_bits & 0x00000008u) {
      destination_node_ = from.destination_node_;
    }
    if (cached_has_bits & 0x00000010u) {
      source_node_ = from.source_node_;
    }
    if (cached_has_bits & 0x00000020u) {
      source_channel_ = from.source_channel_;
    }
    if (cached_has_bits & 0x00000040u) {
      type_ = from.type_;
    }
    if (cached_has_bits & 0x00000080u) {
      batch_number_ = from.batch_number_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void MessageProto::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MessageProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MessageProto::CopyFrom(const MessageProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MessageProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MessageProto::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000049) != 0x00000049) return false;
  return true;
}

void MessageProto::Swap(MessageProto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MessageProto::InternalSwap(MessageProto* other) {
  using std::swap;
  data_.InternalSwap(CastToBase(&other->data_));
  data_ptr_.InternalSwap(&other->data_ptr_);
  keys_.InternalSwap(CastToBase(&other->keys_));
  values_.InternalSwap(CastToBase(&other->values_));
  destination_channel_.Swap(&other->destination_channel_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  main_channel_.Swap(&other->main_channel_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  channel_request_.Swap(&other->channel_request_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(destination_node_, other->destination_node_);
  swap(source_node_, other->source_node_);
  swap(source_channel_, other->source_channel_);
  swap(type_, other->type_);
  swap(batch_number_, other->batch_number_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata MessageProto::GetMetadata() const {
  protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::MessageProto* Arena::CreateMaybeMessage< ::MessageProto >(Arena* arena) {
  return Arena::CreateInternal< ::MessageProto >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

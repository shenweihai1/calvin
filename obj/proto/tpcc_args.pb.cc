// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tpcc_args.proto

#include "tpcc_args.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

class TPCCArgsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TPCCArgs>
      _instance;
} _TPCCArgs_default_instance_;
namespace protobuf_tpcc_5fargs_2eproto {
static void InitDefaultsTPCCArgs() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_TPCCArgs_default_instance_;
    new (ptr) ::TPCCArgs();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::TPCCArgs::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_TPCCArgs =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTPCCArgs}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_TPCCArgs.base);
}

::google::protobuf::Metadata file_level_metadata[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TPCCArgs, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TPCCArgs, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TPCCArgs, system_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TPCCArgs, multipartition_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TPCCArgs, order_line_count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TPCCArgs, quantities_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TPCCArgs, amount_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TPCCArgs, last_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TPCCArgs, order_number_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TPCCArgs, lastest_order_number_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TPCCArgs, threshold_),
  1,
  3,
  ~0u,
  ~0u,
  4,
  0,
  5,
  6,
  2,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 14, sizeof(::TPCCArgs)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::_TPCCArgs_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "tpcc_args.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 1);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\017tpcc_args.proto\"\317\001\n\010TPCCArgs\022\023\n\013system"
      "_time\030\001 \001(\001\022\026\n\016multipartition\030\n \001(\010\022\030\n\020o"
      "rder_line_count\030\024 \003(\005\022\022\n\nquantities\030\025 \003("
      "\005\022\016\n\006amount\030\037 \001(\005\022\021\n\tlast_name\030  \001(\014\022\024\n\014"
      "order_number\030) \001(\005\022\034\n\024lastest_order_numb"
      "er\030* \001(\005\022\021\n\tthreshold\0303 \001(\005"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 227);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "tpcc_args.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_tpcc_5fargs_2eproto

// ===================================================================

void TPCCArgs::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TPCCArgs::kSystemTimeFieldNumber;
const int TPCCArgs::kMultipartitionFieldNumber;
const int TPCCArgs::kOrderLineCountFieldNumber;
const int TPCCArgs::kQuantitiesFieldNumber;
const int TPCCArgs::kAmountFieldNumber;
const int TPCCArgs::kLastNameFieldNumber;
const int TPCCArgs::kOrderNumberFieldNumber;
const int TPCCArgs::kLastestOrderNumberFieldNumber;
const int TPCCArgs::kThresholdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TPCCArgs::TPCCArgs()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tpcc_5fargs_2eproto::scc_info_TPCCArgs.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:TPCCArgs)
}
TPCCArgs::TPCCArgs(const TPCCArgs& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      order_line_count_(from.order_line_count_),
      quantities_(from.quantities_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  last_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_last_name()) {
    last_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.last_name_);
  }
  ::memcpy(&system_time_, &from.system_time_,
    static_cast<size_t>(reinterpret_cast<char*>(&lastest_order_number_) -
    reinterpret_cast<char*>(&system_time_)) + sizeof(lastest_order_number_));
  // @@protoc_insertion_point(copy_constructor:TPCCArgs)
}

void TPCCArgs::SharedCtor() {
  last_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&system_time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&lastest_order_number_) -
      reinterpret_cast<char*>(&system_time_)) + sizeof(lastest_order_number_));
}

TPCCArgs::~TPCCArgs() {
  // @@protoc_insertion_point(destructor:TPCCArgs)
  SharedDtor();
}

void TPCCArgs::SharedDtor() {
  last_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TPCCArgs::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TPCCArgs::descriptor() {
  ::protobuf_tpcc_5fargs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tpcc_5fargs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TPCCArgs& TPCCArgs::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tpcc_5fargs_2eproto::scc_info_TPCCArgs.base);
  return *internal_default_instance();
}


void TPCCArgs::Clear() {
// @@protoc_insertion_point(message_clear_start:TPCCArgs)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  order_line_count_.Clear();
  quantities_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    last_name_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 126u) {
    ::memset(&system_time_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&lastest_order_number_) -
        reinterpret_cast<char*>(&system_time_)) + sizeof(lastest_order_number_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool TPCCArgs::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:TPCCArgs)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional double system_time = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          set_has_system_time();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &system_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool multipartition = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          set_has_multipartition();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &multipartition_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 order_line_count = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(160u /* 160 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 2, 160u, input, this->mutable_order_line_count())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 162 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_order_line_count())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 quantities = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(168u /* 168 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 2, 168u, input, this->mutable_quantities())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(170u /* 170 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_quantities())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 amount = 31;
      case 31: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(248u /* 248 & 0xFF */)) {
          set_has_amount();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &amount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes last_name = 32;
      case 32: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(2u /* 258 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_last_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 order_number = 41;
      case 41: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 328 & 0xFF */)) {
          set_has_order_number();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &order_number_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 lastest_order_number = 42;
      case 42: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 336 & 0xFF */)) {
          set_has_lastest_order_number();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &lastest_order_number_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 threshold = 51;
      case 51: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(152u /* 408 & 0xFF */)) {
          set_has_threshold();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &threshold_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TPCCArgs)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TPCCArgs)
  return false;
#undef DO_
}

void TPCCArgs::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TPCCArgs)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional double system_time = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->system_time(), output);
  }

  // optional bool multipartition = 10;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(10, this->multipartition(), output);
  }

  // repeated int32 order_line_count = 20;
  for (int i = 0, n = this->order_line_count_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      20, this->order_line_count(i), output);
  }

  // repeated int32 quantities = 21;
  for (int i = 0, n = this->quantities_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      21, this->quantities(i), output);
  }

  // optional int32 amount = 31;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(31, this->amount(), output);
  }

  // optional bytes last_name = 32;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      32, this->last_name(), output);
  }

  // optional int32 order_number = 41;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(41, this->order_number(), output);
  }

  // optional int32 lastest_order_number = 42;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(42, this->lastest_order_number(), output);
  }

  // optional int32 threshold = 51;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(51, this->threshold(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:TPCCArgs)
}

::google::protobuf::uint8* TPCCArgs::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:TPCCArgs)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional double system_time = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->system_time(), target);
  }

  // optional bool multipartition = 10;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(10, this->multipartition(), target);
  }

  // repeated int32 order_line_count = 20;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt32ToArray(20, this->order_line_count_, target);

  // repeated int32 quantities = 21;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt32ToArray(21, this->quantities_, target);

  // optional int32 amount = 31;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(31, this->amount(), target);
  }

  // optional bytes last_name = 32;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        32, this->last_name(), target);
  }

  // optional int32 order_number = 41;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(41, this->order_number(), target);
  }

  // optional int32 lastest_order_number = 42;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(42, this->lastest_order_number(), target);
  }

  // optional int32 threshold = 51;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(51, this->threshold(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TPCCArgs)
  return target;
}

size_t TPCCArgs::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TPCCArgs)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated int32 order_line_count = 20;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->order_line_count_);
    total_size += 2 *
                  ::google::protobuf::internal::FromIntSize(this->order_line_count_size());
    total_size += data_size;
  }

  // repeated int32 quantities = 21;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->quantities_);
    total_size += 2 *
                  ::google::protobuf::internal::FromIntSize(this->quantities_size());
    total_size += data_size;
  }

  if (_has_bits_[0 / 32] & 127u) {
    // optional bytes last_name = 32;
    if (has_last_name()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->last_name());
    }

    // optional double system_time = 1;
    if (has_system_time()) {
      total_size += 1 + 8;
    }

    // optional int32 threshold = 51;
    if (has_threshold()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->threshold());
    }

    // optional bool multipartition = 10;
    if (has_multipartition()) {
      total_size += 1 + 1;
    }

    // optional int32 amount = 31;
    if (has_amount()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->amount());
    }

    // optional int32 order_number = 41;
    if (has_order_number()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->order_number());
    }

    // optional int32 lastest_order_number = 42;
    if (has_lastest_order_number()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->lastest_order_number());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TPCCArgs::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TPCCArgs)
  GOOGLE_DCHECK_NE(&from, this);
  const TPCCArgs* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TPCCArgs>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TPCCArgs)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TPCCArgs)
    MergeFrom(*source);
  }
}

void TPCCArgs::MergeFrom(const TPCCArgs& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TPCCArgs)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  order_line_count_.MergeFrom(from.order_line_count_);
  quantities_.MergeFrom(from.quantities_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 127u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_last_name();
      last_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.last_name_);
    }
    if (cached_has_bits & 0x00000002u) {
      system_time_ = from.system_time_;
    }
    if (cached_has_bits & 0x00000004u) {
      threshold_ = from.threshold_;
    }
    if (cached_has_bits & 0x00000008u) {
      multipartition_ = from.multipartition_;
    }
    if (cached_has_bits & 0x00000010u) {
      amount_ = from.amount_;
    }
    if (cached_has_bits & 0x00000020u) {
      order_number_ = from.order_number_;
    }
    if (cached_has_bits & 0x00000040u) {
      lastest_order_number_ = from.lastest_order_number_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void TPCCArgs::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TPCCArgs)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TPCCArgs::CopyFrom(const TPCCArgs& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TPCCArgs)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TPCCArgs::IsInitialized() const {
  return true;
}

void TPCCArgs::Swap(TPCCArgs* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TPCCArgs::InternalSwap(TPCCArgs* other) {
  using std::swap;
  order_line_count_.InternalSwap(&other->order_line_count_);
  quantities_.InternalSwap(&other->quantities_);
  last_name_.Swap(&other->last_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(system_time_, other->system_time_);
  swap(threshold_, other->threshold_);
  swap(multipartition_, other->multipartition_);
  swap(amount_, other->amount_);
  swap(order_number_, other->order_number_);
  swap(lastest_order_number_, other->lastest_order_number_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TPCCArgs::GetMetadata() const {
  protobuf_tpcc_5fargs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tpcc_5fargs_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::TPCCArgs* Arena::CreateMaybeMessage< ::TPCCArgs >(Arena* arena) {
  return Arena::CreateInternal< ::TPCCArgs >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: txn.proto

#include "txn.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

class TxnProtoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TxnProto>
      _instance;
} _TxnProto_default_instance_;
namespace protobuf_txn_2eproto {
static void InitDefaultsTxnProto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_TxnProto_default_instance_;
    new (ptr) ::TxnProto();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::TxnProto::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_TxnProto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTxnProto}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_TxnProto.base);
}

::google::protobuf::Metadata file_level_metadata[1];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[2];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TxnProto, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TxnProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TxnProto, txn_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TxnProto, txn_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TxnProto, isolation_level_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TxnProto, multipartition_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TxnProto, read_set_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TxnProto, write_set_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TxnProto, read_write_set_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TxnProto, arg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TxnProto, status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TxnProto, readers_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TxnProto, writers_),
  1,
  2,
  3,
  4,
  ~0u,
  ~0u,
  ~0u,
  0,
  5,
  ~0u,
  ~0u,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 16, sizeof(::TxnProto)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::_TxnProto_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "txn.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 1);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\ttxn.proto\"\234\003\n\010TxnProto\022\016\n\006txn_id\030\001 \002(\003"
      "\022\020\n\010txn_type\030\n \001(\005\0221\n\017isolation_level\030\013 "
      "\001(\0162\030.TxnProto.IsolationLevel\022\026\n\016multipa"
      "rtition\030\014 \001(\010\022\020\n\010read_set\030\024 \003(\014\022\021\n\twrite"
      "_set\030\025 \003(\014\022\026\n\016read_write_set\030\026 \003(\014\022\013\n\003ar"
      "g\030\027 \001(\014\022 \n\006status\030\036 \001(\0162\020.TxnProto.Statu"
      "s\022\017\n\007readers\030( \003(\005\022\017\n\007writers\030) \003(\005\"Z\n\016I"
      "solationLevel\022\020\n\014SERIALIZABLE\020\000\022\014\n\010SNAPS"
      "HOT\020\001\022\022\n\016READ_COMMITTED\020\002\022\024\n\020READ_UNCOMM"
      "ITTED\020\003\"9\n\006Status\022\007\n\003NEW\020\000\022\n\n\006ACTIVE\020\001\022\r"
      "\n\tCOMMITTED\020\002\022\013\n\007ABORTED\020\003"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 426);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "txn.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_txn_2eproto
const ::google::protobuf::EnumDescriptor* TxnProto_IsolationLevel_descriptor() {
  protobuf_txn_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_txn_2eproto::file_level_enum_descriptors[0];
}
bool TxnProto_IsolationLevel_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const TxnProto_IsolationLevel TxnProto::SERIALIZABLE;
const TxnProto_IsolationLevel TxnProto::SNAPSHOT;
const TxnProto_IsolationLevel TxnProto::READ_COMMITTED;
const TxnProto_IsolationLevel TxnProto::READ_UNCOMMITTED;
const TxnProto_IsolationLevel TxnProto::IsolationLevel_MIN;
const TxnProto_IsolationLevel TxnProto::IsolationLevel_MAX;
const int TxnProto::IsolationLevel_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* TxnProto_Status_descriptor() {
  protobuf_txn_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_txn_2eproto::file_level_enum_descriptors[1];
}
bool TxnProto_Status_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const TxnProto_Status TxnProto::NEW;
const TxnProto_Status TxnProto::ACTIVE;
const TxnProto_Status TxnProto::COMMITTED;
const TxnProto_Status TxnProto::ABORTED;
const TxnProto_Status TxnProto::Status_MIN;
const TxnProto_Status TxnProto::Status_MAX;
const int TxnProto::Status_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void TxnProto::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TxnProto::kTxnIdFieldNumber;
const int TxnProto::kTxnTypeFieldNumber;
const int TxnProto::kIsolationLevelFieldNumber;
const int TxnProto::kMultipartitionFieldNumber;
const int TxnProto::kReadSetFieldNumber;
const int TxnProto::kWriteSetFieldNumber;
const int TxnProto::kReadWriteSetFieldNumber;
const int TxnProto::kArgFieldNumber;
const int TxnProto::kStatusFieldNumber;
const int TxnProto::kReadersFieldNumber;
const int TxnProto::kWritersFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TxnProto::TxnProto()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_txn_2eproto::scc_info_TxnProto.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:TxnProto)
}
TxnProto::TxnProto(const TxnProto& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      read_set_(from.read_set_),
      write_set_(from.write_set_),
      read_write_set_(from.read_write_set_),
      readers_(from.readers_),
      writers_(from.writers_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  arg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_arg()) {
    arg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.arg_);
  }
  ::memcpy(&txn_id_, &from.txn_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&status_) -
    reinterpret_cast<char*>(&txn_id_)) + sizeof(status_));
  // @@protoc_insertion_point(copy_constructor:TxnProto)
}

void TxnProto::SharedCtor() {
  arg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&txn_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&status_) -
      reinterpret_cast<char*>(&txn_id_)) + sizeof(status_));
}

TxnProto::~TxnProto() {
  // @@protoc_insertion_point(destructor:TxnProto)
  SharedDtor();
}

void TxnProto::SharedDtor() {
  arg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TxnProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TxnProto::descriptor() {
  ::protobuf_txn_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_txn_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TxnProto& TxnProto::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_txn_2eproto::scc_info_TxnProto.base);
  return *internal_default_instance();
}


void TxnProto::Clear() {
// @@protoc_insertion_point(message_clear_start:TxnProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  read_set_.Clear();
  write_set_.Clear();
  read_write_set_.Clear();
  readers_.Clear();
  writers_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    arg_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 62u) {
    ::memset(&txn_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&status_) -
        reinterpret_cast<char*>(&txn_id_)) + sizeof(status_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool TxnProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:TxnProto)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int64 txn_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_txn_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &txn_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 txn_type = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          set_has_txn_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &txn_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .TxnProto.IsolationLevel isolation_level = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::TxnProto_IsolationLevel_IsValid(value)) {
            set_isolation_level(static_cast< ::TxnProto_IsolationLevel >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                11, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool multipartition = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {
          set_has_multipartition();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &multipartition_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated bytes read_set = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 162 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_read_set()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated bytes write_set = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(170u /* 170 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_write_set()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated bytes read_write_set = 22;
      case 22: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(178u /* 178 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_read_write_set()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes arg = 23;
      case 23: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(186u /* 186 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_arg()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .TxnProto.Status status = 30;
      case 30: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(240u /* 240 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::TxnProto_Status_IsValid(value)) {
            set_status(static_cast< ::TxnProto_Status >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                30, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 readers = 40;
      case 40: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 320 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 2, 320u, input, this->mutable_readers())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 322 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_readers())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 writers = 41;
      case 41: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 328 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 2, 328u, input, this->mutable_writers())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 330 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_writers())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TxnProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TxnProto)
  return false;
#undef DO_
}

void TxnProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TxnProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int64 txn_id = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->txn_id(), output);
  }

  // optional int32 txn_type = 10;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->txn_type(), output);
  }

  // optional .TxnProto.IsolationLevel isolation_level = 11;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      11, this->isolation_level(), output);
  }

  // optional bool multipartition = 12;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(12, this->multipartition(), output);
  }

  // repeated bytes read_set = 20;
  for (int i = 0, n = this->read_set_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      20, this->read_set(i), output);
  }

  // repeated bytes write_set = 21;
  for (int i = 0, n = this->write_set_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      21, this->write_set(i), output);
  }

  // repeated bytes read_write_set = 22;
  for (int i = 0, n = this->read_write_set_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      22, this->read_write_set(i), output);
  }

  // optional bytes arg = 23;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      23, this->arg(), output);
  }

  // optional .TxnProto.Status status = 30;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      30, this->status(), output);
  }

  // repeated int32 readers = 40;
  for (int i = 0, n = this->readers_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      40, this->readers(i), output);
  }

  // repeated int32 writers = 41;
  for (int i = 0, n = this->writers_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      41, this->writers(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:TxnProto)
}

::google::protobuf::uint8* TxnProto::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:TxnProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int64 txn_id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->txn_id(), target);
  }

  // optional int32 txn_type = 10;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->txn_type(), target);
  }

  // optional .TxnProto.IsolationLevel isolation_level = 11;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      11, this->isolation_level(), target);
  }

  // optional bool multipartition = 12;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(12, this->multipartition(), target);
  }

  // repeated bytes read_set = 20;
  for (int i = 0, n = this->read_set_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(20, this->read_set(i), target);
  }

  // repeated bytes write_set = 21;
  for (int i = 0, n = this->write_set_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(21, this->write_set(i), target);
  }

  // repeated bytes read_write_set = 22;
  for (int i = 0, n = this->read_write_set_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(22, this->read_write_set(i), target);
  }

  // optional bytes arg = 23;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        23, this->arg(), target);
  }

  // optional .TxnProto.Status status = 30;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      30, this->status(), target);
  }

  // repeated int32 readers = 40;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt32ToArray(40, this->readers_, target);

  // repeated int32 writers = 41;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt32ToArray(41, this->writers_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TxnProto)
  return target;
}

size_t TxnProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TxnProto)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required int64 txn_id = 1;
  if (has_txn_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->txn_id());
  }
  // repeated bytes read_set = 20;
  total_size += 2 *
      ::google::protobuf::internal::FromIntSize(this->read_set_size());
  for (int i = 0, n = this->read_set_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->read_set(i));
  }

  // repeated bytes write_set = 21;
  total_size += 2 *
      ::google::protobuf::internal::FromIntSize(this->write_set_size());
  for (int i = 0, n = this->write_set_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->write_set(i));
  }

  // repeated bytes read_write_set = 22;
  total_size += 2 *
      ::google::protobuf::internal::FromIntSize(this->read_write_set_size());
  for (int i = 0, n = this->read_write_set_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->read_write_set(i));
  }

  // repeated int32 readers = 40;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->readers_);
    total_size += 2 *
                  ::google::protobuf::internal::FromIntSize(this->readers_size());
    total_size += data_size;
  }

  // repeated int32 writers = 41;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->writers_);
    total_size += 2 *
                  ::google::protobuf::internal::FromIntSize(this->writers_size());
    total_size += data_size;
  }

  // optional bytes arg = 23;
  if (has_arg()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->arg());
  }

  if (_has_bits_[0 / 32] & 60u) {
    // optional int32 txn_type = 10;
    if (has_txn_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->txn_type());
    }

    // optional .TxnProto.IsolationLevel isolation_level = 11;
    if (has_isolation_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->isolation_level());
    }

    // optional bool multipartition = 12;
    if (has_multipartition()) {
      total_size += 1 + 1;
    }

    // optional .TxnProto.Status status = 30;
    if (has_status()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->status());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TxnProto::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TxnProto)
  GOOGLE_DCHECK_NE(&from, this);
  const TxnProto* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TxnProto>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TxnProto)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TxnProto)
    MergeFrom(*source);
  }
}

void TxnProto::MergeFrom(const TxnProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TxnProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  read_set_.MergeFrom(from.read_set_);
  write_set_.MergeFrom(from.write_set_);
  read_write_set_.MergeFrom(from.read_write_set_);
  readers_.MergeFrom(from.readers_);
  writers_.MergeFrom(from.writers_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_arg();
      arg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.arg_);
    }
    if (cached_has_bits & 0x00000002u) {
      txn_id_ = from.txn_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      txn_type_ = from.txn_type_;
    }
    if (cached_has_bits & 0x00000008u) {
      isolation_level_ = from.isolation_level_;
    }
    if (cached_has_bits & 0x00000010u) {
      multipartition_ = from.multipartition_;
    }
    if (cached_has_bits & 0x00000020u) {
      status_ = from.status_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void TxnProto::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TxnProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TxnProto::CopyFrom(const TxnProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TxnProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TxnProto::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000002) != 0x00000002) return false;
  return true;
}

void TxnProto::Swap(TxnProto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TxnProto::InternalSwap(TxnProto* other) {
  using std::swap;
  read_set_.InternalSwap(CastToBase(&other->read_set_));
  write_set_.InternalSwap(CastToBase(&other->write_set_));
  read_write_set_.InternalSwap(CastToBase(&other->read_write_set_));
  readers_.InternalSwap(&other->readers_);
  writers_.InternalSwap(&other->writers_);
  arg_.Swap(&other->arg_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(txn_id_, other->txn_id_);
  swap(txn_type_, other->txn_type_);
  swap(isolation_level_, other->isolation_level_);
  swap(multipartition_, other->multipartition_);
  swap(status_, other->status_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TxnProto::GetMetadata() const {
  protobuf_txn_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_txn_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::TxnProto* Arena::CreateMaybeMessage< ::TxnProto >(Arena* arena) {
  return Arena::CreateInternal< ::TxnProto >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
